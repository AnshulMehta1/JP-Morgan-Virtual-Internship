From 7a16c5a28ae834d6e4f2c0b1f11135419172d1eb Mon Sep 17 00:00:00 2001
From: AnshulMehta1 <anshul.m@ahduni.edu.in>
Date: Thu, 27 May 2021 18:10:44 +0530
Subject: [PATCH] Patch Baneha

---
 src/DataManipulator.ts | 37 ++++++++++++++++++++++++++-----------
 src/Graph.tsx          | 34 +++++++++++++++++++++++-----------
 2 files changed, 49 insertions(+), 22 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..0ad575c 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,35 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  // stock: string,
+  // top_ask_price: number,
+  price_abc:number,
+  price_def:number,
+  ratio:number,
+  upper_bound:number,
+  lower_bound:number,
+  trig_alert:number| undefined,
   timestamp: Date,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
-  }
+  static generateRow(serverRespond: ServerRespond[]): Row {
+        const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+        const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+        const ratio = priceABC / priceDEF;
+        const upperBound = 1 + 0.05;
+        const lowerBound = 1 - 0.05;
+        return {
+          price_abc: priceABC,
+          price_def: priceDEF,
+          ratio,
+          timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ?
+            serverRespond[0].timestamp : serverRespond[1].timestamp,
+          upper_bound: upperBound,
+          lower_bound: lowerBound,
+          trig_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+        };
 }
+
+}
\ No newline at end of file
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..41ef2de 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,36 +23,48 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
+      ub: 'float',
+      lower_bound: 'float',
+      trig_alert: 'float',
       timestamp: 'date',
     };
 
-    if (window.perspective && window.perspective.worker()) {
+    if (window.perspective ) {
       this.table = window.perspective.worker().table(schema);
     }
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
+      // elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      // elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        // stock: 'distinctcount',
+        // top_ask_price: 'avg',
+        // top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trig_alert: 'avg'
         timestamp: 'distinct count',
+
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+
+      ]);
     }
   }
 }
-- 
2.30.0.windows.2

